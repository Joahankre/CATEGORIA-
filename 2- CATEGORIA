' === Verifica se o documento ativo é uma montagem ===
If ThisApplication.ActiveDocumentType <> DocumentTypeEnum.kAssemblyDocumentObject Then
    MessageBox.Show("Abra uma montagem (.iam) antes de rodar esta regra.", "Erro")
    Return
End If

Dim oAsmDoc As AssemblyDocument = ThisApplication.ActiveDocument
Dim oCompOccs As ComponentOccurrences = oAsmDoc.ComponentDefinition.Occurrences

' === Obter documentos únicos dos componentes ===
Dim compDocs As New Dictionary(Of String, Document)
For Each occ As ComponentOccurrence In oCompOccs.AllLeafOccurrences
    Try
        Dim path As String = occ.Definition.Document.FullFileName
        If Not compDocs.ContainsKey(path) Then
            compDocs.Add(path, occ.Definition.Document)
        End If
    Catch
        ' Ignorar componentes não resolvidos
    End Try
Next

' === Criar formulário de seleção ===
Dim frmSelecao As New System.Windows.Forms.Form With {
    .Text = "Selecione os modelos para editar",
    .Width = 600,
    .Height = 550,
    .StartPosition = FormStartPosition.CenterScreen,
    .FormBorderStyle = FormBorderStyle.Sizable
}

Dim lblInstrucao As New System.Windows.Forms.Label With {
    .Text = "Digite o prefixo e clique em 'Filtrar':",
    .Top = 10,
    .Left = 10,
    .Width = 560
}
frmSelecao.Controls.Add(lblInstrucao)

Dim txtPrefixo As New System.Windows.Forms.TextBox With {
    .Top = 35,
    .Left = 10,
    .Width = 400
}
frmSelecao.Controls.Add(txtPrefixo)

Dim btnFiltrar As New System.Windows.Forms.Button With {
    .Text = "Filtrar",
    .Top = 33,
    .Left = 420,
    .Width = 150
}
frmSelecao.Controls.Add(btnFiltrar)

Dim lstModelos As New System.Windows.Forms.CheckedListBox With {
    .Top = 70,
    .Left = 10,
    .Width = 560,
    .Height = 320,
    .CheckOnClick = True,
    .Anchor = AnchorStyles.Top Or AnchorStyles.Bottom Or AnchorStyles.Left Or AnchorStyles.Right
}
frmSelecao.Controls.Add(lstModelos)

Dim btnSelecionarTodos As New System.Windows.Forms.Button With {
    .Text = "Selecionar Todos",
    .Top = 400,
    .Left = 10,
    .Width = 180,
    .Anchor = AnchorStyles.Left Or AnchorStyles.Bottom
}
frmSelecao.Controls.Add(btnSelecionarTodos)

Dim btnDesmarcarTodos As New System.Windows.Forms.Button With {
    .Text = "Desmarcar Todos",
    .Top = 400,
    .Left = 200,
    .Width = 180,
    .Anchor = AnchorStyles.Left Or AnchorStyles.Bottom
}
frmSelecao.Controls.Add(btnDesmarcarTodos)

Dim btnOk As New System.Windows.Forms.Button With {
    .Text = "Confirmar",
    .Top = 440,
    .Left = 10,
    .Width = 560,
    .Height = 30,
    .Anchor = AnchorStyles.Left Or AnchorStyles.Right Or AnchorStyles.Bottom
}
frmSelecao.Controls.Add(btnOk)

' === Atualizar lista com filtro por prefixo ===
Dim SubAtualizarLista As Action = Sub()
    Dim prefixo = txtPrefixo.Text.Trim().ToLower()
    lstModelos.Items.Clear()
    For Each kvp In compDocs
        Dim nomeArq = System.IO.Path.GetFileNameWithoutExtension(kvp.Key).ToLower()
        If nomeArq.StartsWith(prefixo) Then
            lstModelos.Items.Add(kvp.Key)
        End If
    Next
End Sub

AddHandler btnFiltrar.Click, Sub()
    SubAtualizarLista()
    If lstModelos.Items.Count = 0 Then
        MessageBox.Show("Nenhum modelo encontrado com o prefixo '" & txtPrefixo.Text.Trim() & "'.", "Aviso")
    End If
End Sub

AddHandler btnSelecionarTodos.Click, Sub()
    For i As Integer = 0 To lstModelos.Items.Count - 1
        lstModelos.SetItemChecked(i, True)
    Next
End Sub

AddHandler btnDesmarcarTodos.Click, Sub()
    For i As Integer = 0 To lstModelos.Items.Count - 1
        lstModelos.SetItemChecked(i, False)
    Next
End Sub

AddHandler btnOk.Click, Sub()
    If lstModelos.CheckedItems.Count = 0 Then
        MessageBox.Show("Selecione ao menos um modelo.", "Aviso")
        Return
    End If
    frmSelecao.DialogResult = DialogResult.OK
    frmSelecao.Close()
End Sub

' === Carregar lista inicial ===
SubAtualizarLista()

' === Exibir formulário ===
If frmSelecao.ShowDialog() <> DialogResult.OK Then Return

' === Obter documentos selecionados ===
Dim modelosSelecionados As New List(Of Document)
For Each item As String In lstModelos.CheckedItems
    modelosSelecionados.Add(compDocs(item))
Next

' === Loop para editar cada documento ===
For Each oDoc As Document In modelosSelecionados

    ' Abre o documento para inspeção visual
    Try
        ThisApplication.Documents.Open(oDoc.FullFileName, True).Activate()
    Catch ex As Exception
        MessageBox.Show("Erro ao abrir o modelo: " & oDoc.DisplayName & vbCrLf & ex.Message)
        Continue For
    End Try

    ' Acessa o PropertySet
    Dim docSummaryProps As PropertySet = Nothing
    Try
        docSummaryProps = oDoc.PropertySets.Item("Inventor Document Summary Information")
    Catch ex As Exception
        MessageBox.Show("Erro ao acessar propriedades de " & oDoc.DisplayName & vbCrLf & ex.Message)
        Continue For
    End Try

    ' Valor atual
    Dim currentCategory As String = ""
    Try
        currentCategory = docSummaryProps.Item("Category").Value.ToString()
    Catch
        currentCategory = ""
    End Try

    ' === Formulário de edição ===
    Dim frm As New System.Windows.Forms.Form With {
        .Text = "Editar Categoria - " & oDoc.DisplayName,
        .Width = 500,
        .Height = 200,
        .StartPosition = FormStartPosition.CenterScreen,
        .FormBorderStyle = FormBorderStyle.FixedDialog
    }

    Dim lbl As New System.Windows.Forms.Label With {
        .Text = "Categoria:",
        .Top = 20,
        .Left = 20,
        .Width = 100
    }
    frm.Controls.Add(lbl)

    Dim cboCategoria As New System.Windows.Forms.ComboBox With {
        .Top = 50,
        .Left = 20,
        .Width = 440,
        .DropDownStyle = ComboBoxStyle.DropDown
    }

    cboCategoria.Items.AddRange(New String() {
        "CC - INTERNO - CORTE LASER CH",
        "CT - INTERNO - CORTE LASER TB",
        "SF - INTERNO - SERRA FITA",
        "UI - INTERNO - USINAGEM",
        "DO - INTERNO - DOBRA",
        "MS - INTERNO - MONTAGEM/SOLDA",
        "MF - INTERNO - MONTAGEM FINAL",
        "EA - ELETRICA / AUTOMAÇAO",
        "UEPM - USINAGEM EXTERNA - POLIMEROS",
        "UEAL - USINAGEM EXTERNA - ALUMINIO",
        "UEPC - USINAGEM EXTERNA - POLICARBONATO",
        "UEEF - USINAGEM EXTERNA - ELETROFUSAO",
        "UEIN - USINAGEM EXTERNA - INOX"
    })
    cboCategoria.Text = currentCategory
    frm.Controls.Add(cboCategoria)

    Dim btnAplicar As New System.Windows.Forms.Button With {
        .Text = "Aplicar",
        .Top = 100,
        .Left = 20,
        .Width = 440
    }

    AddHandler btnAplicar.Click, Sub()
        Try
            Dim categoryProp As Inventor.Property
            Try
                categoryProp = docSummaryProps.Item("Category")
            Catch
                categoryProp = docSummaryProps.Add("", "Category")
            End Try
            categoryProp.Value = cboCategoria.Text
            oDoc.Save()
            oDoc.Close(True)
            frm.Close()
        Catch ex As Exception
            MessageBox.Show("Erro ao aplicar categoria em: " & oDoc.DisplayName & vbCrLf & ex.Message)
        End Try
    End Sub

    frm.Controls.Add(btnAplicar)
    frm.ShowDialog()
Next

